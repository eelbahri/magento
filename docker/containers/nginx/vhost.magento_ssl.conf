server {
    listen 443 ssl;

    set_by_lua $app_server_name 'return os.getenv("APP_SERVER_NAME")';

    set $PROXY_URL varnish;

    server_name $app_server_name;
    add_header Strict-Transport-Security "max-age=31536000";
    add_header "X-Disko-Proxy" "Nginx-https";

    ssl on;

    ssl_certificate           /etc/nginx/cert/nginx-selfsigned.crt;
    ssl_certificate_key       /etc/nginx/cert/nginx-selfsigned.key;
    ssl_session_cache         shared:SSL:10m;
    ssl_session_timeout       5m;
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers               "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    ssl_prefer_server_ciphers on;

    location / {
       # ip of local DNS for docker, mandatory to resolve varnish hostname in variable
       resolver 127.0.0.11;
       proxy_pass http://$PROXY_URL:80;
       proxy_set_header X-Real-IP  $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Port 443;
       proxy_set_header X-Forwarded-Proto https;
       proxy_set_header Host $host;
       proxy_redirect off;
    }

    access_log  /var/log/nginx/access_ssl.log;
    error_log   /var/log/nginx/error_ssl.log;
}